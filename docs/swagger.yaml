definitions:
  controller.userResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/model.User'
        type: array
    type: object
  model.User:
    properties:
      address:
        example: г. Москва, ул. Ленина, д. 5, кв. 1
        type: string
      name:
        example: Иван
        type: string
      patronymic:
        example: Иванович
        type: string
      surname:
        example: Иванов
        type: string
    type: object
  utils.HTTPError:
    properties:
      code:
        example: 400
        type: integer
      message:
        example: 'Status: Bad Request'
        type: string
    type: object
info:
  contact: {}
paths:
  /tasks/countdown/end:
    patch:
      description: Закончить отсчет времени по задаче для пользователя
      parameters:
      - description: ID задачи
        in: query
        name: id
        required: true
        type: string
      responses: {}
      summary: Закончить отсчет времени по задаче для пользователя
      tags:
      - tasks
  /tasks/countdown/start:
    post:
      description: Начать отсчет времени по задаче для пользователя
      parameters:
      - description: ID пользователя
        in: query
        name: uid
        required: true
        type: string
      responses: {}
      summary: Начать отсчет времени по задаче для пользователя
      tags:
      - tasks
  /users/change:
    patch:
      consumes:
      - application/json
      description: Изменение данных пользователя
      parameters:
      - description: Идентификатор пользователя
        in: query
        name: id
        required: true
        type: string
      - description: Изменение данных пользователя
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.HTTPError'
      summary: Изменение данных пользователя
      tags:
      - users
  /users/create:
    post:
      consumes:
      - application/json
      description: Создает нового пользователя
      parameters:
      - description: Новый пользователь
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/controller.userResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.HTTPError'
      summary: Создает нового пользователя
      tags:
      - users
  /users/delete:
    delete:
      description: Изменение данных пользователя
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.HTTPError'
      summary: Удаление пользователя
      tags:
      - users
  /users/list:
    get:
      description: Получение данных о всех пользователях
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.HTTPError'
      summary: Получение данных о всех пользователях
      tags:
      - users
  /users/list/{id}:
    get:
      description: Получение данных о пользователе по ID
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.HTTPError'
      summary: Получение данных о пользователе по ID
      tags:
      - users
swagger: "2.0"
