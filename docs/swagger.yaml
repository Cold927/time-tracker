definitions:
  controller.errResponse:
    properties:
      message:
        type: string
    type: object
  controller.userResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/model.User'
        type: array
    type: object
  model.User:
    properties:
      address:
        type: string
      name:
        type: string
      patronymic:
        type: string
      surname:
        type: string
    type: object
info:
  contact: {}
paths:
  /tasks/countdown/end:
    patch:
      consumes:
      - application/json
      description: Закончить отсчет времени по задаче для пользователя
      produces:
      - application/json
      responses: {}
      security:
      - bearerToken: []
      summary: Закончить отсчет времени по задаче для пользователя
      tags:
      - Tasks
  /tasks/countdown/start:
    post:
      consumes:
      - application/json
      description: Начать отсчет времени по задаче для пользователя
      produces:
      - application/json
      responses: {}
      security:
      - bearerToken: []
      summary: Начать отсчет времени по задаче для пользователя
      tags:
      - Tasks
  /users/change:
    patch:
      consumes:
      - application/json
      description: Изменение данных пользователя
      produces:
      - application/json
      responses: {}
      summary: Изменение данных пользователя
      tags:
      - Users
  /users/create:
    post:
      consumes:
      - application/json
      description: Создает нового пользователя
      parameters:
      - description: Новый пользователь
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/controller.userResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.errResponse'
      summary: Создает нового пользователя
      tags:
      - Users
  /users/delete:
    delete:
      consumes:
      - application/json
      description: Изменение данных пользователя
      produces:
      - application/json
      responses: {}
      summary: Удаление пользователя
      tags:
      - Users
  /users/list:
    get:
      consumes:
      - application/json
      description: Получение данных о всех пользователях
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.userResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.errResponse'
      summary: Получение данных о всех пользователях
      tags:
      - Users
  /users/list/{id}:
    get:
      consumes:
      - application/json
      description: Получение данных о пользователе по ID
      produces:
      - application/json
      responses: {}
      summary: Получение данных о пользователе по ID
      tags:
      - Users
swagger: "2.0"
